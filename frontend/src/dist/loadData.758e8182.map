{"version":3,"sources":["restLoader.js","firstWebComponent.js","loadData.js"],"names":["RestLoader","console","log","WordCount","markdown","wcParent","parentNode","countWords","node","text","innerText","textContent","split","length","count","elementFound","window","document","querySelector","dir","innerHTML","shadow","attachShadow","mode","createElement","appendChild","setInterval","HTMLParagraphElement","customElements","define","extends","url","promise","fetch","then","response","restLoader","answer","json","result"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAqBA;;;AAEjB,wBAAa;AAAA;;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;;;;6BAEQ;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRL;IACMC;;;;;AACF,qBAAYC,QAAZ,EAAsB;AAAA;;AAAA;;AACpB;AACA;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAHoB,CAKpB;;AACA,QAAIG,QAAQ,GAAG,MAAKC,UAApB;;AAEA,aAASC,UAAT,CAAoBC,IAApB,EAAyB;AACvB,UAAIC,IAAI,GAAGD,IAAI,CAACE,SAAL,IAAkBF,IAAI,CAACG,WAAlC;AACA,aAAOF,IAAI,CAACG,KAAL,CAAW,MAAX,EAAmBC,MAA1B;AACD;;AAED,QAAIC,KAAK,GAAG,YAAYP,UAAU,CAACF,QAAD,CAAlC;AAEA,QAAIU,YAAY,GAAGC,MAAM,CAACC,QAAP,CAAgBC,aAAhB,CAA8B,aAA9B,CAAnB;AACAjB,IAAAA,OAAO,CAACkB,GAAR,CAAYJ,YAAZ;AACAA,IAAAA,YAAY,CAACK,SAAb,GAAyBhB,QAAzB,CAjBoB,CAmBpB;;AACA,QAAIiB,MAAM,GAAG,MAAKC,YAAL,CAAkB;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAlB,CAAb,CApBoB,CAsBpB;;;AACA,QAAId,IAAI,GAAGQ,QAAQ,CAACO,aAAT,CAAuB,MAAvB,CAAX;AACAf,IAAAA,IAAI,CAACE,WAAL,GAAmBG,KAAnB,CAxBoB,CA0BpB;;AACAO,IAAAA,MAAM,CAACI,WAAP,CAAmBhB,IAAnB,EA3BoB,CA8BpB;;AACAiB,IAAAA,WAAW,CAAC,YAAW;AACrB,UAAIZ,KAAK,GAAG,YAAYP,UAAU,CAACF,QAAD,CAAlC;AACAI,MAAAA,IAAI,CAACE,WAAL,GAAmBG,KAAnB;AACD,KAHU,EAGR,GAHQ,CAAX;AA/BoB;AAoCrB;;;mBArCmBa,wBAwCtB;;;AACAC,cAAc,CAACC,MAAf,CAAsB,YAAtB,EAAoC1B,SAApC,EAA+C;AAAE2B,EAAAA,OAAO,EAAE;AAAX,CAA/C;;;;AC1CF;;AACA;;;;AAEA,IAAMC,GAAG,GAAG,oEAAZ;AACA,IAAMC,OAAO,GAAGC,KAAK,CAACF,GAAD,CAArB;AAEAC,OAAO,CAACE,IAAR,CACI,UAASC,QAAT,EAAmB;AACf,MAAIC,UAAU,GAAG,IAAIpC,mBAAJ,EAAjB;AACAoC,EAAAA,UAAU,CAACC,MAAX;AACAF,EAAAA,QAAQ,CAACG,IAAT,GAAgBJ,IAAhB,CAAsB,UAAAK,MAAM;AAAA,WAAItC,OAAO,CAACC,GAAR,CAAYqC,MAAZ,CAAJ;AAAA,GAA5B;AACH,CALL","file":"loadData.758e8182.map","sourceRoot":"..","sourcesContent":["export default class RestLoader{\n\n    constructor(){\n        console.log('Rest Loader built');\n    }\n\n    answer() {\n        console.log(\"answering\");\n    }\n}","// Create a class for the element\nclass WordCount extends HTMLParagraphElement {\n    constructor(markdown) {\n      // Always call super first in constructor\n      super();\n      console.log('in constructor');\n  \n      // count words in element's parent element\n      var wcParent = this.parentNode;\n  \n      function countWords(node){\n        var text = node.innerText || node.textContent\n        return text.split(/\\s+/g).length;\n      }\n  \n      var count = 'Words: ' + countWords(wcParent);\n\n      let elementFound = window.document.querySelector(\"#md-content\");\n      console.dir(elementFound);\n      elementFound.innerHTML = markdown;\n  \n      // Create a shadow root\n      var shadow = this.attachShadow({mode: 'open'});\n  \n      // Create text node and add word count to it\n      var text = document.createElement('span');\n      text.textContent = count;\n  \n      // Append it to the shadow root\n      shadow.appendChild(text);\n  \n  \n      // Update count when element content changes\n      setInterval(function() {\n        var count = 'Words: ' + countWords(wcParent);\n        text.textContent = count;\n      }, 200)\n  \n    }\n  }\n  \n  // Define the new element\n  customElements.define('word-count', WordCount, { extends: 'p' });","import RestLoader from './restLoader'\nimport WordCount from './firstWebComponent'\n\nconst url = 'http://node4717-javademo.jcloud.ik-server.com:8080/api/conferences'\nconst promise = fetch(url);\n\npromise.then(\n    function(response) {\n        let restLoader = new RestLoader();\n        restLoader.answer();\n        response.json().then( result => console.log(result));\n    }\n)"]}