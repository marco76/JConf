{"version":3,"sources":["loadData.js"],"names":["url","SERVER_URL","getRemoteObjects","promise","fetch","then","response","json","getRemoteArticle","name","console","log","getSpeakerList","getSpeaker","id"],"mappings":";AAqCC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,eAAA,EAAA,QAAA,WAAA,EArCD,IAAMA,EAAM,wCAERC,EAAa,6BAEV,SAASC,IAELC,OADSC,MAAMJ,GACPK,KACX,SAAAC,GACYA,OAAAA,EAASC,SAItB,SAASC,EAAiBC,GAEtBN,OADSC,MAAMH,EAAa,kBAAkBQ,GACtCJ,KACX,SAAAC,GAEWA,OADPI,QAAQC,IAAI,qBAAsBL,GAC3BA,IAIZ,SAASM,IAELT,OADSC,MAAMH,EAAa,qBACpBI,KACX,SAAAC,GACWA,OAAAA,IAKZ,SAASO,EAAWC,GAEhBX,OADSC,MAAMH,EAAa,mBAAqBa,GACzCT,KACX,SAAAC,GACWA,OAAAA","file":"loadData.2d98bf56.map","sourceRoot":"..","sourcesContent":["const url = 'https://www.jconf.org/api/conferences';\n\nvar SERVER_URL = 'https://www.jconf.org:8080';\n\nexport function getRemoteObjects() {\n    const promise = fetch(url);\n    return promise.then(\n        response => {\n             return response.json()\n        });\n}\n\nexport function getRemoteArticle(name) {\n    const promise = fetch(SERVER_URL + '/api/post/html/'+name);\n    return promise.then(\n        response => {\n            console.log('returning resposne', response);\n            return response;\n        });\n}\n\nexport function getSpeakerList() {\n    const promise = fetch(SERVER_URL + '/api/speaker/list');\n    return promise.then(\n        response => {\n            return response;\n        });\n\n}\n\nexport function getSpeaker(id) {\n    const promise = fetch(SERVER_URL + '/api/speaker/id/' + id);\n    return promise.then(\n        response => {\n            return response;\n        });\n\n}\n\n"]}