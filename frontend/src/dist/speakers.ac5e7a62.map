{"version":3,"sources":["loadData.js","components/speakers/speakers.js"],"names":["url","SERVER_URL","getRemoteObjects","promise","fetch","then","response","json","getRemoteArticle","name","console","log","getSpeakerList","getSpeaker","id","Speakers","container","document","getElementById","div","createElement","speakers","firstChild","removeChild","appendChild","ul","className","loadData","responseText","forEach","value","li","addEventListener","a","setAttribute","createTextNode","speakerContainer","innerText","text","insertAdjacentHTML","init"],"mappings":"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","file":"speakers.ac5e7a62.map","sourceRoot":"..","sourcesContent":["const url = 'https://www.jconf.org/api/conferences';\n\nvar SERVER_URL = 'https://www.jconf.org:8080';\n\nexport function getRemoteObjects() {\n    const promise = fetch(url);\n    return promise.then(\n        response => {\n             return response.json()\n        });\n}\n\nexport function getRemoteArticle(name) {\n    const promise = fetch(SERVER_URL + '/api/post/html/'+name);\n    return promise.then(\n        response => {\n            console.log('returning resposne', response);\n            return response;\n        });\n}\n\nexport function getSpeakerList() {\n    const promise = fetch(SERVER_URL + '/api/speaker/list');\n    return promise.then(\n        response => {\n            return response;\n        });\n\n}\n\nexport function getSpeaker(id) {\n    const promise = fetch(SERVER_URL + '/api/speaker/id/' + id);\n    return promise.then(\n        response => {\n            return response;\n        });\n\n}\n\n","import * as loadData from \"../../loadData\";\n\nexport default class Speakers {\n\n    constructor() {\n        this.container = document.getElementById('speakersContainer');\n        this.div = document.createElement('div');\n        this.speakers = [];\n        this.url='http://localhost:8080/api/speaker/id/';\n\n        while (this.container.firstChild) {\n            this.container.removeChild(this.container.firstChild);\n        }\n        this.container.appendChild(this.div);\n    };\n\n    init() {\n        speakers = [];\n        let ul = this.div.appendChild(document.createElement('ul'));\n        ul.className = \"speaker-list\";\n        loadData.getSpeakerList()\n            .then(\n                response => response.json()\n                    .then(\n                        responseText => {\n                            responseText.forEach(\n                                value => {\n                                    let li = ul.appendChild(document.createElement('li'));\n                                    li.className = \"speaker-list\";\n                                    li.addEventListener('click', function(){\n                                        Speakers.getSpeaker(value);\n                                    });\n                                    let a = li.appendChild(document.createElement('a'));\n                                    a.setAttribute('href', \"#\");\n                                    li.appendChild(a);\n                                    a.appendChild(document.createTextNode(value));\n\n\n                                }\n                            )\n                        }\n                    ))\n    }\n\n   static getSpeaker(id) {\n       let speakerContainer = document.getElementById('selectedSpeakerContainer');\n       speakerContainer.innerText=\"\";\n\n       loadData.getSpeaker(id)\n            .then(response => response.text().then(\n                responseText =>\n                    speakerContainer.insertAdjacentHTML('afterbegin', responseText)\n            ));\n    }\n}\n\nlet speakers = new Speakers().init();\n"]}